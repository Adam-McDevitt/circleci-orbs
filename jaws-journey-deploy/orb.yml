version: 2.1
description: "Defines the core steps required for a smart journey deployment pipeline"

orbs:
  aws-ecr: circleci/aws-ecr@6.3.0
  terraform: ovotech/terraform@1.6
  openjdk-install: cloudesire/openjdk-install@1.2.3
  snyk: snyk/snyk@0.0.10
  shipit: ovotech/shipit@1

executors:
  kotlin:
    docker:
      - image: circleci/openjdk:11.0.7-jdk-buster

aliases:
  parameters:
    context: &context
      context:
        type: "string"
        description: "context to be used on build"

    environment: &environment
      environment:
        type: "enum"
        enum: ["sandbox", "nonprod", "prod"]
        default: "sandbox"
    subproject: &subproject
      subproject:
        type: "string"

  avro-setup: &avro-setup
    run:
      name: Upload Avro and run compatibility checks
      command: bash circleci_avro.sh << parameters.uploadschema >>

  build-project: &build-project
    run:
      name: Build project
      command: bash circleci_build_project.sh << parameters.subproject >> $PROFILE

  save-test-results: &save-test-results
    run:
      name: Save test results
      command: bash circleci_save_test_results.sh << parameters.subproject >>

  run-integration-test: &run-integration-test
    run:
      name: Run Integration tests
      command: bash circleci_run_integration_test.sh << parameters.subproject >>

  set-environment-variables: &set-environment-variables
    run:
      name: Set Profile Variable
      command: bash circleci_set_profile.sh "<< pipeline.git.branch >>" "<< pipeline.git.tag >>"

jobs:
  checkout-code:
    executor: kotlin
    working_directory: ~/working
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  avro:
    executor: kotlin
    working_directory: ~/working
    parameters:
      uploadschema:
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: ~/working
      - restore_cache:
          key: gradle-{{ checksum "build.gradle" }}
      - *avro-setup